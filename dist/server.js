import{a as H,b as L,c as M,d as N}from"./index-657qg6mr.js";var Y=M(),Z=N(),G=L(),E=H("node:fs/promises"),O=H("node:child_process"),P=H("node:http");process.on("uncaughtException",function(x){console.error(x&&x.stack?x.stack:x),process.exit(1)});async function Q(){let x=(await E.open("stderr.log","a")).createWriteStream();process.stdout.write=process.stderr.write=x.write.bind(x);let z="bin";await G.mkdirP(z);for(let C of["bash","ln"])await E.symlink(await G.which(C),`${z}/${C}`);await E.symlink(`${import.meta.dirname}/../tarshim.sh`,`${z}/tar`),process.env.PATH=z,await G.mkdirP("upload"),delete process.env.GITHUB_WORKSPACE}async function R(x){let z=O.fork(`${import.meta.dirname}/restore.js`,[],{env:{...process.env,TARGET_FILE_NAME:x}});await new Promise((C,B)=>{z.on("close",(I,J)=>{if(I==0)C();else if(J)B(`Child process stopped because of signal ${J}`);else B(`Child process exited with code ${I}`)})})}function T(x){if(x.startsWith("/nar/"))return x.slice(5);return x.slice(1)}async function V(x,z){if(x.method!="GET"){z.writeHead(400),z.end();return}let C=T(x.url);try{await R(C);let B=await E.open(C);z.writeHead(200),await B.createReadStream().pipe(z)}catch(B){if(B.code==="ENOENT"){z.writeHead(404),z.end();return}z.writeHead(500),console.error(B&&B.stack?B.stack:B),z.end(B.message)}}function W(){P.createServer(V).listen(8080,()=>{process.send("started")})}async function X(){let x=E.watch("upload",{recursive:!0});for await(event of watcher)console.log(event)}await Q();X();W();

//# debugId=A67264A5F67198B064756E2164756E21
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vc3JjL3NlcnZlci5qcyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsKICAgICJjb25zdCBjb3JlID0gcmVxdWlyZSgnQGFjdGlvbnMvY29yZScpO1xuY29uc3QgY2FjaGUgPSByZXF1aXJlKCdAYWN0aW9ucy9jYWNoZScpO1xuY29uc3QgaW8gPSByZXF1aXJlKCdAYWN0aW9ucy9pbycpO1xuY29uc3QgZnMgPSByZXF1aXJlKCdub2RlOmZzL3Byb21pc2VzJyk7XG5jb25zdCBjaGlsZF9wcm9jZXNzID0gcmVxdWlyZSgnbm9kZTpjaGlsZF9wcm9jZXNzJyk7XG5jb25zdCBodHRwID0gcmVxdWlyZSgnbm9kZTpodHRwJyk7XG5cbnByb2Nlc3Mub24oJ3VuY2F1Z2h0RXhjZXB0aW9uJywgZnVuY3Rpb24oZXJyb3IpIHtcbiAgY29uc29sZS5lcnJvcigoZXJyb3IgJiYgZXJyb3Iuc3RhY2spID8gZXJyb3Iuc3RhY2sgOiBlcnJvcik7XG4gIHByb2Nlc3MuZXhpdCgxKTtcbn0pO1xuXG5hc3luYyBmdW5jdGlvbiBzZXR1cCgpIHtcbiAgY29uc3QgbG9nRmlsZSA9IChhd2FpdCBmcy5vcGVuKGBzdGRlcnIubG9nYCwgJ2EnKSkuY3JlYXRlV3JpdGVTdHJlYW0oKTtcbiAgcHJvY2Vzcy5zdGRvdXQud3JpdGUgPSBwcm9jZXNzLnN0ZGVyci53cml0ZSA9IGxvZ0ZpbGUud3JpdGUuYmluZChsb2dGaWxlKTtcblxuICBjb25zdCBiaW5EaXIgPSBgYmluYDtcbiAgYXdhaXQgaW8ubWtkaXJQKGJpbkRpcik7XG4gIGZvciAoY29uc3QgYmluIG9mIFtcImJhc2hcIiwgXCJsblwiXSkge1xuICAgIGF3YWl0IGZzLnN5bWxpbmsoYXdhaXQgaW8ud2hpY2goYmluKSwgYCR7YmluRGlyfS8ke2Jpbn1gKVxuICB9XG4gIGF3YWl0IGZzLnN5bWxpbmsoYCR7aW1wb3J0Lm1ldGEuZGlybmFtZX0vLi4vdGFyc2hpbS5zaGAsIGAke2JpbkRpcn0vdGFyYClcbiAgcHJvY2Vzcy5lbnYuUEFUSCA9IGJpbkRpcjtcblxuICBhd2FpdCBpby5ta2RpclAoYHVwbG9hZGApO1xuICAvLyBGb3JjZSBjYWNoZSB0byByZXN0b3JlIHRvIGN3ZFxuICBkZWxldGUgcHJvY2Vzcy5lbnZbXCJHSVRIVUJfV09SS1NQQUNFXCJdO1xufVxuXG5hc3luYyBmdW5jdGlvbiBzYXZlKG5hbWUpIHtcbiAgY29uc3QgY2FjaGVJZCA9IGF3YWl0IGNhY2hlLnNhdmVDYWNoZShbbmFtZV0sIG5hbWUpO1xufVxuXG5hc3luYyBmdW5jdGlvbiByZXN0b3JlKG5hbWUpIHtcbiAgY29uc3QgY2hpbGQgPSBjaGlsZF9wcm9jZXNzLmZvcmsoYCR7aW1wb3J0Lm1ldGEuZGlybmFtZX0vcmVzdG9yZS5qc2AsIFtdLCB7XG4gICAgZW52OiB7Li4ucHJvY2Vzcy5lbnYsIFRBUkdFVF9GSUxFX05BTUU6IG5hbWV9LFxuICB9KTtcbiAgYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGNoaWxkLm9uKCdjbG9zZScsIChjb2RlLCBzaWduYWwpID0+IHtcbiAgICAgIGlmIChjb2RlID09IDApIHtcbiAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgfSBlbHNlIGlmIChzaWduYWwpIHtcbiAgICAgICAgcmVqZWN0KGBDaGlsZCBwcm9jZXNzIHN0b3BwZWQgYmVjYXVzZSBvZiBzaWduYWwgJHtzaWduYWx9YCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZWplY3QoYENoaWxkIHByb2Nlc3MgZXhpdGVkIHdpdGggY29kZSAke2NvZGV9YCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBnZXRLZXkodXJsKSB7XG4gIGlmICh1cmwuc3RhcnRzV2l0aChgL25hci9gKSkge1xuICAgIHJldHVybiB1cmwuc2xpY2UoNSk7XG4gIH1cbiAgcmV0dXJuIHVybC5zbGljZSgxKTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gaGFuZGxlKHJlcSwgcmVzKSB7XG4gIGlmIChyZXEubWV0aG9kICE9ICdHRVQnKSB7XG4gICAgcmVzLndyaXRlSGVhZCg0MDApO1xuICAgIHJlcy5lbmQoKTtcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3Qga2V5ID0gZ2V0S2V5KHJlcS51cmwpO1xuICB0cnkge1xuICAgIGF3YWl0IHJlc3RvcmUoa2V5KTtcbiAgICBjb25zdCBmID0gYXdhaXQgZnMub3BlbihrZXkpO1xuICAgIHJlcy53cml0ZUhlYWQoMjAwKTtcbiAgICBhd2FpdCBmLmNyZWF0ZVJlYWRTdHJlYW0oKS5waXBlKHJlcyk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgaWYgKGVycm9yLmNvZGUgPT09ICdFTk9FTlQnKSB7XG4gICAgICByZXMud3JpdGVIZWFkKDQwNCk7XG4gICAgICByZXMuZW5kKCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHJlcy53cml0ZUhlYWQoNTAwKTtcbiAgICBjb25zb2xlLmVycm9yKChlcnJvciAmJiBlcnJvci5zdGFjaykgPyBlcnJvci5zdGFjayA6IGVycm9yKTtcbiAgICByZXMuZW5kKGVycm9yLm1lc3NhZ2UpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHN0YXJ0U2VydmVyKCkge1xuICBjb25zdCBzZXJ2ZXIgPSBodHRwLmNyZWF0ZVNlcnZlcihoYW5kbGUpO1xuICBzZXJ2ZXIubGlzdGVuKDgwODAsICgpID0+IHtcbiAgICBwcm9jZXNzLnNlbmQoJ3N0YXJ0ZWQnKTtcbiAgfSk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHdhdGNoQW5kVXBsb2FkKCkge1xuICBjb25zdCB3YXRoY2VyID0gZnMud2F0Y2goYHVwbG9hZGAsIHtyZWN1cnNpdmU6IHRydWV9KTtcbiAgZm9yIGF3YWl0IChldmVudCBvZiB3YXRjaGVyKSB7XG4gICAgY29uc29sZS5sb2coZXZlbnQpO1xuICB9XG59XG5cbmF3YWl0IHNldHVwKCk7XG53YXRjaEFuZFVwbG9hZCgpO1xuc3RhcnRTZXJ2ZXIoKTtcbiIKICBdLAogICJtYXBwaW5ncyI6ICI2REFBQSxJQUFNLE1BQ0EsTUFDQSxNQUNBLHdCQUNBLDBCQUNBLGlCQUVOLFFBQVEsR0FBRyw0QkFBNkIsQ0FBQyxFQUFPLENBQzlDLFFBQVEsTUFBTyxHQUFTLEVBQU0sTUFBUyxFQUFNLE1BQVEsQ0FBSyxFQUMxRCxRQUFRLEtBQUssQ0FBQyxFQUNmLEVBRUQsZUFBZSxDQUFLLEVBQUcsQ0FDckIsSUFBTSxHQUFXLE1BQU0sRUFBRyxLQUFLLGFBQWMsR0FBRyxHQUFHLGtCQUFrQixFQUNyRSxRQUFRLE9BQU8sTUFBUSxRQUFRLE9BQU8sTUFBUSxFQUFRLE1BQU0sS0FBSyxDQUFPLEVBRXhFLElBQU0sRUFBUyxNQUNmLE1BQU0sRUFBRyxPQUFPLENBQU0sRUFDdEIsUUFBVyxJQUFPLENBQUMsT0FBUSxJQUFJLEVBQzdCLE1BQU0sRUFBRyxRQUFRLE1BQU0sRUFBRyxNQUFNLENBQUcsRUFBRyxHQUFHLEtBQVUsR0FBSyxFQUUxRCxNQUFNLEVBQUcsUUFBUSxHQUFHLFlBQVksd0JBQXlCLEdBQUcsT0FBWSxFQUN4RSxRQUFRLElBQUksS0FBTyxFQUVuQixNQUFNLEVBQUcsT0FBTyxRQUFRLFNBRWpCLFFBQVEsSUFBSSxpQkFPckIsZUFBZSxDQUFPLENBQUMsRUFBTSxDQUMzQixJQUFNLEVBQVEsRUFBYyxLQUFLLEdBQUcsWUFBWSxxQkFBc0IsQ0FBQyxFQUFHLENBQ3hFLElBQUssSUFBSSxRQUFRLElBQUssaUJBQWtCLENBQUksQ0FDOUMsQ0FBQyxFQUNELE1BQU0sSUFBSSxRQUFRLENBQUMsRUFBUyxJQUFXLENBQ3JDLEVBQU0sR0FBRyxRQUFTLENBQUMsRUFBTSxJQUFXLENBQ2xDLEdBQUksR0FBUSxFQUNWLEVBQVEsVUFDQyxFQUNULEVBQU8sMkNBQTJDLEdBQVEsTUFFMUQsR0FBTyxrQ0FBa0MsR0FBTSxFQUVsRCxFQUNGLEVBR0gsU0FBUyxDQUFNLENBQUMsRUFBSyxDQUNuQixHQUFJLEVBQUksV0FBVyxPQUFPLEVBQ3hCLE9BQU8sRUFBSSxNQUFNLENBQUMsRUFFcEIsT0FBTyxFQUFJLE1BQU0sQ0FBQyxFQUdwQixlQUFlLENBQU0sQ0FBQyxFQUFLLEVBQUssQ0FDOUIsR0FBSSxFQUFJLFFBQVUsTUFBTyxDQUN2QixFQUFJLFVBQVUsR0FBRyxFQUNqQixFQUFJLElBQUksRUFDUixPQUVGLElBQU0sRUFBTSxFQUFPLEVBQUksR0FBRyxFQUMxQixHQUFJLENBQ0YsTUFBTSxFQUFRLENBQUcsRUFDakIsSUFBTSxFQUFJLE1BQU0sRUFBRyxLQUFLLENBQUcsRUFDM0IsRUFBSSxVQUFVLEdBQUcsRUFDakIsTUFBTSxFQUFFLGlCQUFpQixFQUFFLEtBQUssQ0FBRyxRQUM1QixFQUFQLENBQ0EsR0FBSSxFQUFNLE9BQVMsU0FBVSxDQUMzQixFQUFJLFVBQVUsR0FBRyxFQUNqQixFQUFJLElBQUksRUFDUixPQUVGLEVBQUksVUFBVSxHQUFHLEVBQ2pCLFFBQVEsTUFBTyxHQUFTLEVBQU0sTUFBUyxFQUFNLE1BQVEsQ0FBSyxFQUMxRCxFQUFJLElBQUksRUFBTSxPQUFPLEdBSXpCLFNBQVMsQ0FBVyxFQUFHLENBRXJCLEFBRGUsRUFBSyxhQUFhLENBQU0sRUFDaEMsT0FBTyxLQUFNLElBQU0sQ0FDeEIsUUFBUSxLQUFLLFNBQVMsRUFDdkIsRUFHSCxlQUFlLENBQWMsRUFBRyxDQUM5QixJQUFNLEVBQVUsRUFBRyxNQUFNLFNBQVUsQ0FBQyxVQUFXLEVBQUksQ0FBQyxFQUNwRCxVQUFXLFNBQVMsUUFDbEIsUUFBUSxJQUFJLEtBQUssRUFJckIsTUFBTSxFQUFNLEVBQ1osRUFBZSxFQUNmLEVBQVkiLAogICJkZWJ1Z0lkIjogIkE2NzI2NEE1RjY3MTk4QjA2NDc1NkUyMTY0NzU2RTIxIiwKICAibmFtZXMiOiBbXQp9
