import{a as n,b as h,c as l,d as p}from"./index-657qg6mr.js";var d=l(),w=p(),r=h(),i=n("node:fs/promises"),f=n("node:child_process");async function m(){let e=process.env.PATH,s=process.env.RUNNER_TEMP+"/tmpbin";await r.mkdirP(s);for(let t of["bash","ln"])await i.symlink(await r.which(t),`${s}/${t}`);await i.symlink(`${import.meta.dirname}/../tarshim.sh`,`${s}/tar`),process.env.PATH=s,delete process.env.GITHUB_WORKSPACE,process.chdir(process.env.RUNNER_TEMP)}async function u(e){let s=await w.saveCache([e],e)}async function v(e){let s=f.fork(`${import.meta.dirname}/restore.js`,[],{env:{...process.env,TARGET_FILE_NAME:e}});await new Promise((t,a)=>{s.on("close",(c,o)=>{if(c==0)t();else if(o)a(`Child process stopped because of signal ${o}`);else a(`Child process exited with code ${c}`)})})}try{await m(),await u("testfile"),await i.unlink("testfile"),await v("testfile")}catch(e){d.setFailed(e.message)}
